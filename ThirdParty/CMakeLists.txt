function(add_glfw)
	set(GLFW_INSTALL OFF CACHE BOOL "" FORCE)
	set(GLFW_BUILD_DOCS OFF CACHE BOOL "" FORCE)
	set(GLFW_BUILD_TESTS OFF CACHE BOOL "" FORCE)
	set(GLFW_BUILD_EXAMPLES OFF CACHE BOOL "" FORCE)
	set(BUILD_SHARED_LIBS OFF CACHE BOOL "" FORCE)
	add_subdirectory(glfw)
endfunction(add_glfw)

function(add_glm)
	add_subdirectory(glm)
endfunction()

function(add_vma)
	add_subdirectory(VulkanMemoryAllocator)
endfunction()

function(add_imgui)
	add_subdirectory(imgui)
endfunction()

function(add_tinyobjloader)
	add_subdirectory(tinyobjloader)
endfunction()

function(add_stb_image)
	add_subdirectory(stb_image)
endfunction()

function(add_thread_pool)
	add_subdirectory(thread-pool)
endfunction()

function(add_entt)
	add_subdirectory(entt)
endfunction()

function(add_imguizmo)
	add_subdirectory(imguizmo)
endfunction()

function(add_json)
	add_subdirectory(json)
endfunction()

function(add_googletest)
	set(BUILD_GMOCK OFF CACHE BOOL "" FORCE)
	add_subdirectory(googletest)
	target_compile_definitions(gtest PRIVATE -DGTEST_LINKED_AS_SHARED_LIBRARY=0)
	target_compile_definitions(gtest PRIVATE -DGTEST_CREATE_SHARED_LIBRARY=0)
endfunction()

function(add_magic_enum)
	add_subdirectory(magic_enum)
endfunction()

function(add_fmt)
	add_subdirectory(fmt)

	if(${DISARRAY_COMPILER} STREQUAL "GNU" OR ${DISARRAY_COMPILER} MATCHES "Clang")
		target_compile_options(fmt PRIVATE -Wno-unknown-attributes)
	endif()
endfunction()

function(add_spirvcross)
	set(SPIRV_CROSS_CLI OFF CACHE BOOL "" FORCE)
	set(SPIRV_CROSS_ENABLE_TESTS OFF CACHE BOOL "" FORCE)
	set(SPIRV_CROSS_ENABLE_HLSL OFF CACHE BOOL "" FORCE)
	set(SPIRV_CROSS_ENABLE_MSL OFF CACHE BOOL "" FORCE)
	set(SPIRV_CROSS_ENABLE_CPP OFF CACHE BOOL "" FORCE)
	set(SPIRV_CROSS_ENABLE_REFLECT ON CACHE BOOL "" FORCE)
	set(SPIRV_CROSS_ENABLE_C_API OFF CACHE BOOL "" FORCE)
	set(SPIRV_CROSS_ENABLE_UTIL OFF CACHE BOOL "" FORCE)
	add_subdirectory(SPIRV-Cross)
endfunction()

function(add_glslang)
	set(BUILD_EXTERNAL OFF CACHE BOOL "" FORCE)
	set(ENABLE_GLSLANG_BINARIES OFF CACHE BOOL "" FORCE)
	set(ENABLE_HLSL OFF CACHE BOOL "" FORCE)
	set(ENABLE_CTEST OFF CACHE BOOL "" FORCE)
	add_subdirectory(glslang)
endfunction()

function(add_spdlog)
	set(CMAKE_POLICY_DEFAULT_CMP0077 NEW)
	set(SPDLOG_NO_EXCEPTIONS ON CACHE BOOL "" FORCE)
	set(SPDLOG_BUILD_SHARED OFF CACHE BOOL "" FORCE)
	set(SPDLOG_FMT_EXTERNAL ON CACHE BOOL "" FORCE)
	set(SPDLOG_ENABLE_PCH ON CACHE BOOL "" FORCE)
	add_subdirectory(spdlog)
endfunction()

function(add_tiny_file_dialogs)
	if(${DISARRAY_COMPILER} STREQUAL "GNU" OR ${DISARRAY_COMPILER} MATCHES "Clang")
		set(TINYFILEDIALOGS_ALLOW_POINTER_BOOL_CONVERSION ON CACHE BOOL "" FORCE)
	endif()

	add_subdirectory(libtinyfiledialogs)
endfunction()

function(add_assimp)
	set(BUILD_SHARED_LIBS OFF CACHE BOOL "" FORCE)
	set(ASSIMP_INSTALL OFF CACHE BOOL "" FORCE)
	set(ASSIMP_BUILD_TESTS OFF CACHE BOOL "" FORCE)
	add_subdirectory(assimp)
endfunction()

function(add_freetype)
	set(FT_DISABLE_ZLIB ON CACHE BOOL "" FORCE)
	set(FT_DISABLE_BZIP2 ON CACHE BOOL "" FORCE)
	set(FT_DISABLE_PNG ON CACHE BOOL "" FORCE)
	set(FT_DISABLE_HARFBUZZ ON CACHE BOOL "" FORCE)
	set(FT_DISABLE_BROTLI ON CACHE BOOL "" FORCE)

	add_subdirectory(freetype)
endfunction(add_freetype)

add_glfw()
add_glm()
add_vma()
add_imgui()
add_tinyobjloader()
add_stb_image()
add_thread_pool()
add_entt()
add_imguizmo()
add_json()
add_magic_enum()
add_fmt()
add_spirvcross()
add_glslang()
add_spdlog()
add_tiny_file_dialogs()
add_assimp()
add_freetype()

if(DISARRAY_BUILD_TESTS)
	add_googletest()
endif()
