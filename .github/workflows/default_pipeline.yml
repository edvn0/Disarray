name: CMake

on:
  push:
    branches: ["main", "dev"]
  pull_request:
    branches: ["main", "dev"]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: RelWithDebInfo

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: "recursive"

      - name: Install Linux dependencies
        run: |
          sudo apt-get update
          sudo apt-get install git cmake -y

      - uses: awalsh128/cache-apt-pkgs-action@latest
        with:
          packages: libxinerama-dev libxcursor-dev libxi-dev mesa-utils libglu1-mesa-dev freeglut3-dev mesa-common-dev libglew-dev libglfw3-dev libglm-dev libao-dev libmpg123-dev
          version: 1.0

      - name: Install ninja-build tool
        # You may pin to the exact commit or the version.
        # uses: seanmiddleditch/gha-setup-ninja@16b940825621068d98711680b6c3ff92201f8fc0
        uses: seanmiddleditch/gha-setup-ninja@v3
        with:
          # Version of ninja-build to install
          version: 1.11.1
          # Override default platform with one of [win, mac, linux]
          platform: linux

      - name: Prepare Vulkan SDK
        uses: humbletim/setup-vulkan-sdk@v1.2.0
        with:
          vulkan-query-version: 1.3.204.0
          vulkan-components: Vulkan-Headers, Vulkan-Loader, Glslang
          vulkan-use-cache: true

      - name: Configure CMake
        # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
        # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
        run: cmake
          -B build
          -D CMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}
          -G Ninja

      - name: Build
        # Build your program with the given configuration
        run: cmake --build build --config ${{env.BUILD_TYPE}}

      - name: Test
        working-directory: build
        # Execute tests defined by the CMake configuration.
        # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
        run: ctest -C ${{env.BUILD_TYPE}}
